---
import type { CollectionEntry } from 'astro:content';
import Image from '../global/Image.astro';
import Clock from '../../assets/icons/clock.svg';
import PostTags from './PostTags.astro';
import { getFormattedDate, getPermaLink } from '../../utils/utils';
import { findImage } from '../../utils/images';

interface Props {
  post: CollectionEntry<'post'>;
}

const { post } = Astro.props;

const image = (await findImage(post.data.image.src)) as
  | ImageMetadata
  | undefined;

const link = getPermaLink(post.id, 'post');
---

<article
  class={`max-w-md mx-auto md:max-w-none grid gap-6 md:gap-8 intersect-once intersect-quarter motion-safe:md:intersect:animate-fade ${image ? 'md:grid-cols-2' : ''}`}
>
  {
    image &&
      (link ? (
        <a class="relative block group" href={link ?? 'javascript:void(0)'}>
          <div class="relative h-0 pb-[56.25%] md:pb-[75%] md:h-72 lg:pb-[56.25%] overflow-hidden bg-gray-400 bg-slate-700 rounded shadow-lg">
            {image && (
              <Image
                src={image}
                class="absolute inset-0 object-cover w-full h-full mb-6 rounded shadow-lg bg-gray-400 bg-slate-700"
                widths={[400, 900]}
                width={900}
                sizes="(max-width: 900px) 400px, 900px"
                alt={post.data.title}
                aspectRatio="16:9"
                loading="lazy"
                decoding="async"
              />
            )}
          </div>
        </a>
      ) : (
        <div class="relative h-0 pb-[56.25%] md:pb-[75%] md:h-72 lg:pb-[56.25%] overflow-hidden bg-gray-400 bg-slate-700 rounded shadow-lg">
          {image && (
            <Image
              src={image}
              class="absolute inset-0 object-cover w-full h-full mb-6 rounded shadow-lg bg-gray-400 bg-slate-700"
              widths={[400, 900]}
              width={900}
              sizes="(max-width: 900px) 400px, 900px"
              alt={post.data.title}
              aspectRatio="16:9"
              loading="lazy"
              decoding="async"
            />
          )}
        </div>
      ))
  }
  <div class="mt-2">
    <header>
      <div class="flex flex-col lg:flex-row lg:items-center gap-2 mb-1">
        <div class="flex gap-2">
          <img class="w-4" src={Clock.src} />
          <time datetime={String(post.data.publishDate)} class="inline-block"
            >{getFormattedDate(post.data.publishDate)}</time
          >
        </div>
        <div>
          {
            post.data.author && (
              <>
                <span class="hidden lg:inline">|</span>
                <span>{post.data.author}</span>
              </>
            )
          }

          {
            post.data.category && (
              <>
                |
                <a
                  class="hover:underline"
                  href={getPermaLink(post.data.category, 'category')}
                >
                  {post.data.category}
                </a>
              </>
            )
          }
        </div>
      </div>
      <h2
        class="text-xl sm:text-2xl font-bold leading-tight mb-2 font-heading text-slate-300"
      >
        {
          link ? (
            <a
              class="inline-block hover:text-primary hover:text-purple-300 transition ease-in duration-200"
              href={link}
            >
              {post.data.title}
            </a>
          ) : (
            post.data.title
          )
        }
      </h2>
    </header>

    {
      post.data.excerpt && (
        <p class="flex-grow text-muted text-slate-400 text-lg">
          {post.data.excerpt}
        </p>
      )
    }
    {
      post.data.tags && Array.isArray(post.data.tags) ? (
        <footer class="mt-5">
          <PostTags tags={post.data.tags} />
        </footer>
      ) : (
        <Fragment />
      )
    }
  </div>
</article>
